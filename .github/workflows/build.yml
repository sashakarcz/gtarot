name: Build and Sign gtarot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build, Sign, and Upload Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, windows, macos]
        arch: [amd64, arm64] # ARM64 is valid for macOS, Linux, and Windows

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20

      # Build the binary
      - name: Build binary
        run: |
          if [ "${{ matrix.os }}" = "windows" ]; then
            OUTPUT_NAME="gtarot.exe"
          else
            OUTPUT_NAME="gtarot"
          fi
          mkdir -p build/${{ matrix.os }}-${{ matrix.arch }}
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o build/${{ matrix.os }}-${{ matrix.arch }}/$OUTPUT_NAME

      # Install Cosign
      - name: Install Cosign
        run: |
          curl -sSL https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64 -o /usr/local/bin/cosign
          chmod +x /usr/local/bin/cosign

      # Sign the binary
      - name: Sign binary
        env:
          COSIGN_EXPERIMENTAL: "true" # Enable OIDC signing
        run: |
          if [ "${{ matrix.os }}" = "windows" ]; then
            OUTPUT_NAME="gtarot.exe"
          else
            OUTPUT_NAME="gtarot"
          fi
          cosign sign-blob --oidc-issuer=https://token.actions.githubusercontent.com --oidc-client-id=sigstore ${{ github.repository }}/build/${{ matrix.os }}-${{ matrix.arch }}/$OUTPUT_NAME

      # Upload artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: gtarot-${{ matrix.os }}-${{ matrix.arch }}
          path: build/${{ matrix.os }}-${{ matrix.arch }}